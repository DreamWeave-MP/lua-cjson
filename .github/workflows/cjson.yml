name: CJSON-Main

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:
    branches: [ master ]

jobs:
  CJSON_MASTER:
    strategy:
      matrix:
        build_type: [Release, RelWithDebInfo, MinSizeRel, Debug]
        target_system: [ windows-2022 ]
    runs-on: ${{ matrix.target_system }}
    env:
      build_extension: ${{ matrix.target_system == 'windows-2022' && '.dll' || '.so' }}
      BUILD_DIR: $(pwd)/

    steps:
      - uses: actions/checkout@v4

      - name: Prime ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.target_system }}-${{ matrix.build_type }}
          max-size: 1000M

      - name: Get Deps (LuaJIT)
        shell: bash
        # if: steps.cache-Lua.outputs.cache-hit != 'true'
        run: CI/get_deps.sh ${{ matrix.target_system }}

      - name: Configure
        shell: bash
        run: |
          LUA_DIR=LuaJIT/ cmake .

      - name: Build
        if: runner.os == 'Windows'
        run: |
          cmake --build . --config ${{ matrix.build_type }}
          echo ${{ env.BUILD_DIR }}
          mv ${{ env.BUILD_DIR }}/${{ matrix.build_type }}/cjson${{ matrix.build_extension }} ${{ env.BUILD_DIR}}/cjson-${{ matrix.build_type }}${{ env.build_extension }}

      - name: Upload Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Stable-CI
          files: ${{ env.BUILD_DIR }}/cjson-${{ matrix.build_type }}${{ env.build_extension }}
          body: |
            CI Build for Dreamweave IO2 fork

      - name: Upload Artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.BUILD_DIR }}/cjson-${{ matrix.build_type }}${{ env.build_extension }}
          name: cjson-${{ matrix.build_type }}-${{matrix.target_system}}
